// This model was generated by Lumber. However, you remain in control of your models.
// Learn how here: https://docs.forestadmin.com/documentation/v/v6/reference-guide/models/enrich-your-models
module.exports = (sequelize, DataTypes) => {
  const { Sequelize } = sequelize;
  // This section contains the fields of your model, mapped to your table's columns.
  // Learn more here: https://docs.forestadmin.com/documentation/v/v6/reference-guide/models/enrich-your-models#declaring-a-new-field-in-a-model
  const GenericProducts = sequelize.define('genericProducts', {
    title: {
      type: DataTypes.STRING,
    },
    defaultUnit: {
      type: DataTypes.STRING,
    },
    defaultMass: {
      type: DataTypes.DOUBLE,
      defaultValue: 0.0,
    },
    shelfLife: {
      type: DataTypes.INTEGER,
    },
    fridgeShelfLife: {
      type: DataTypes.INTEGER,
    },
    freezerShelfLife: {
      type: DataTypes.INTEGER,
    },
    defaultStorageLocation: {
      type: DataTypes.STRING,
    },
    checked: {
      type: DataTypes.BOOLEAN,
      defaultValue: false,
    },
    brand: {
      type: DataTypes.BOOLEAN,
      defaultValue: false,
    },
    searchVisibility: {
      type: DataTypes.BOOLEAN,
      defaultValue: true,
    },
    createdAt: {
      type: DataTypes.DATE,
    },
    updatedAt: {
      type: DataTypes.DATE,
    },
  }, {
    tableName: 'generic_products',
    underscored: true,
    schema: process.env.DATABASE_SCHEMA,
  });

  // This section contains the relationships for this model. See: https://docs.forestadmin.com/documentation/v/v6/reference-guide/relationships#adding-relationships.
  GenericProducts.associate = (models) => {
    GenericProducts.belongsTo(models.users, {
      foreignKey: {
        name: 'userIdKey',
        field: 'user_id',
      },
      as: 'user',
    });
    GenericProducts.belongsTo(models.categories, {
      foreignKey: {
        name: 'categoryIdKey',
        field: 'category_id',
      },
      as: 'category',
    });
  };

  return GenericProducts;
};
